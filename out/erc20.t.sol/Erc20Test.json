{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDoubleTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testName",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSymbol",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTotalSupply",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testz",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b5061301b8061002d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c8063cc8668de116200007a578063cc8668de146200011a578063d591221f1462000124578063da75220a146200012e578063e13aba481462000138578063eb7492d11462000142578063fa7626d4146200014c57600080fd5b80630a9254e414620000c85780631aeb10a614620000d457806377fc70c614620000de5780639642ddaf14620000e8578063a46f4bd614620000f2578063ba414fa614620000fc575b600080fd5b620000d26200015a565b005b620000d2620001fa565b620000d262000849565b620000d26200091b565b620000d262000c1a565b62000106620011f3565b604051901515815260200160405180910390f35b620000d26200132e565b620000d2620013a3565b620000d2620016f1565b620000d26200176b565b620000d262001b90565b600054620001069060ff1681565b620186a06040516200016c9062001eae565b60608082526004908201526315195cdd60e21b608082015260a060208201819052600390820152621514d560ea1b60c0820152604081019190915260e001604051809103906000f080158015620001c7573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550620001f862001cab565b565b600060029054906101000a90046001600160a01b03166001600160a01b031663a9059cbb600260008154811062000235576200023562001ebc565b6000918252602090912001546040516001600160e01b031960e084901b16815262000271916001600160a01b0316906103e89060040162001ed2565b600060405180830381600087803b1580156200028c57600080fd5b505af1158015620002a1573d6000803e3d6000fd5b505060028054737109709ecfa91a80626ff3989d68f67f5b1dd12d935063ca669fa79250600090620002d757620002d762001ebc565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200032557600080fd5b505af11580156200033a573d6000803e3d6000fd5b50505050600060029054906101000a90046001600160a01b03166001600160a01b031663095ea7b3600260018154811062000379576200037962001ebc565b6000918252602090912001546040516001600160e01b031960e084901b168152620003b5916001600160a01b0316906103e89060040162001ed2565b600060405180830381600087803b158015620003d057600080fd5b505af1158015620003e5573d6000803e3d6000fd5b505060028054737109709ecfa91a80626ff3989d68f67f5b1dd12d935063ca669fa7925060019081106200041d576200041d62001ebc565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200046b57600080fd5b505af115801562000480573d6000803e3d6000fd5b50505050600060029054906101000a90046001600160a01b03166001600160a01b03166323b872dd6002600081548110620004bf57620004bf62001ebc565b600091825260209091200154600280546001600160a01b03909216916001908110620004ef57620004ef62001ebc565b60009182526020909120015460405160e084901b6001600160e01b03191681526001600160a01b039283166004820152911660248201526103e86044820152606401600060405180830381600087803b1580156200054c57600080fd5b505af115801562000561573d6000803e3d6000fd5b50505050620006576040518060400160405280601881526020017f75736572203020746f6b656e2062616c616e6365206973200000000000000000815250600060029054906101000a90046001600160a01b03166001600160a01b03166370a082316002600081548110620005da57620005da62001ebc565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401602060405180830381865afa1580156200062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000651919062001eeb565b62001d70565b620006cc6040518060400160405280601881526020017f75736572203120746f6b656e2062616c616e6365206973200000000000000000815250600060029054906101000a90046001600160a01b03166001600160a01b03166370a082316002600181548110620005da57620005da62001ebc565b600060029054906101000a90046001600160a01b03166001600160a01b03166370a08231600260008154811062000707576200070762001ebc565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401602060405180830381865afa15801562000758573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200077e919062001eeb565b156200078957600080fd5b600060029054906101000a90046001600160a01b03166001600160a01b03166370a082316002600181548110620007c457620007c462001ebc565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401602060405180830381865afa15801562000815573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200083b919062001eeb565b6103e814620001f857600080fd5b7f20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4600060029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620008be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620008e8919081019062001f4e565b604051602001620008fa919062002007565b6040516020818303038152906040528051906020012014620001f857600080fd5b60008060029054906101000a90046001600160a01b03166001600160a01b031663ee8b60256040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000970573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000996919062001eeb565b9050600060029054906101000a90046001600160a01b03166001600160a01b03166340c10f196002600081548110620009d357620009d362001ebc565b6000918252602090912001546040516001600160e01b031960e084901b16815262000a0f916001600160a01b0316906103e89060040162001ed2565b600060405180830381600087803b15801562000a2a57600080fd5b505af115801562000a3f573d6000803e3d6000fd5b5050505062000ac46040518060400160405280601081526020016f02a37ba30b61029bab838363c9034b9960851b815250600060029054906101000a90046001600160a01b03166001600160a01b031663ee8b60256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200062b573d6000803e3d6000fd5b600060029054906101000a90046001600160a01b03166001600160a01b031663ee8b60256040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000b18573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b3e919062001eeb565b62000b4c826103e86200203b565b1462000b5757600080fd5b600060029054906101000a90046001600160a01b03166001600160a01b03166370a08231600260008154811062000b925762000b9262001ebc565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401602060405180830381865afa15801562000be3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c09919062001eeb565b6103e81462000c1757600080fd5b50565b600060029054906101000a90046001600160a01b03166001600160a01b031663a9059cbb600260008154811062000c555762000c5562001ebc565b6000918252602090912001546040516001600160e01b031960e084901b16815262000c91916001600160a01b0316906103e89060040162001ed2565b600060405180830381600087803b15801562000cac57600080fd5b505af115801562000cc1573d6000803e3d6000fd5b5050505062000d3a6040518060400160405280602081526020017f75736572203020746f6b656e206265666f7265207472616e7366657220697320815250600060029054906101000a90046001600160a01b03166001600160a01b03166370a082316002600081548110620005da57620005da62001ebc565b60028054737109709ecfa91a80626ff3989d68f67f5b1dd12d9163ca669fa79160009062000d6c5762000d6c62001ebc565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401600060405180830381600087803b15801562000dba57600080fd5b505af115801562000dcf573d6000803e3d6000fd5b50505050600060029054906101000a90046001600160a01b03166001600160a01b031663a9059cbb600260018154811062000e0e5762000e0e62001ebc565b6000918252602090912001546040516001600160e01b031960e084901b16815262000e4a916001600160a01b0316906103e89060040162001ed2565b600060405180830381600087803b15801562000e6557600080fd5b505af115801562000e7a573d6000803e3d6000fd5b505060028054737109709ecfa91a80626ff3989d68f67f5b1dd12d935063ca669fa79250600190811062000eb25762000eb262001ebc565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401600060405180830381600087803b15801562000f0057600080fd5b505af115801562000f15573d6000803e3d6000fd5b50505050600060029054906101000a90046001600160a01b03166001600160a01b031663a9059cbb600260008154811062000f545762000f5462001ebc565b6000918252602090912001546040516001600160e01b031960e084901b16815262000f90916001600160a01b0316906103e89060040162001ed2565b600060405180830381600087803b15801562000fab57600080fd5b505af115801562000fc0573d6000803e3d6000fd5b505050506200101d60405180606001604052806026815260200162002fc060269139600060029054906101000a90046001600160a01b03166001600160a01b03166370a082316002600081548110620005da57620005da62001ebc565b6200107660405180606001604052806026815260200162002f9a60269139600060029054906101000a90046001600160a01b03166001600160a01b03166370a082316002600181548110620005da57620005da62001ebc565b600060029054906101000a90046001600160a01b03166001600160a01b03166370a082316002600081548110620010b157620010b162001ebc565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401602060405180830381865afa15801562001102573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001128919062001eeb565b6103e8146200113657600080fd5b600060029054906101000a90046001600160a01b03166001600160a01b03166370a08231600260018154811062001171576200117162001ebc565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401602060405180830381865afa158015620011c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011e8919062001eeb565b15620001f857600080fd5b60008054610100900460ff1615620012145750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200132957604051600090737109709ecfa91a80626ff3989d68f67f5b1dd12d907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4906200128b9083906519985a5b195960d21b9060200162001ed2565b60408051601f1981840301815290829052620012ab929160200162002056565b60408051601f1981840301815290829052620012c79162002007565b6000604051808303816000865af19150503d806000811462001306576040519150601f19603f3d011682016040523d82523d6000602084013e6200130b565b606091505b509150508080602001905181019062001325919062002089565b9150505b919050565b7f85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12600060029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015620008be573d6000803e3d6000fd5b600060029054906101000a90046001600160a01b03166001600160a01b031663a9059cbb6002600081548110620013de57620013de62001ebc565b6000918252602090912001546040516001600160e01b031960e084901b1681526200141a916001600160a01b0316906103e89060040162001ed2565b600060405180830381600087803b1580156200143557600080fd5b505af11580156200144a573d6000803e3d6000fd5b50505050620014c36040518060400160405280602081526020017f75736572203020746f6b656e206265666f7265207472616e7366657220697320815250600060029054906101000a90046001600160a01b03166001600160a01b03166370a082316002600081548110620005da57620005da62001ebc565b60028054737109709ecfa91a80626ff3989d68f67f5b1dd12d9163ca669fa791600090620014f557620014f562001ebc565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200154357600080fd5b505af115801562001558573d6000803e3d6000fd5b50505050600060029054906101000a90046001600160a01b03166001600160a01b031663a9059cbb600260018154811062001597576200159762001ebc565b6000918252602090912001546040516001600160e01b031960e084901b168152620015d3916001600160a01b0316906103e89060040162001ed2565b600060405180830381600087803b158015620015ee57600080fd5b505af115801562001603573d6000803e3d6000fd5b505050506200167c6040518060400160405280601f81526020017f75736572203020746f6b656e206166746572207472616e736665722069732000815250600060029054906101000a90046001600160a01b03166001600160a01b03166370a082316002600081548110620005da57620005da62001ebc565b620006cc6040518060400160405280601f81526020017f75736572203120746f6b656e206166746572207472616e736665722069732000815250600060029054906101000a90046001600160a01b03166001600160a01b03166370a082316002600181548110620005da57620005da62001ebc565b60408051808201909152600481526303530b3960e51b602082015260019060029062001732908262001726856103e8620020b4565b620006519190620020d6565b6200176760405180604001604052806011815260200170031bab93932b73a1031b430b4b71034b99607d1b8152504662001d70565b5050565b60008060029054906101000a90046001600160a01b03166001600160a01b031663ee8b60256040518163ffffffff1660e01b8152600401602060405180830381865afa158015620017c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017e6919062001eeb565b9050600060029054906101000a90046001600160a01b03166001600160a01b031663a9059cbb600260008154811062001823576200182362001ebc565b6000918252602090912001546040516001600160e01b031960e084901b1681526200185f916001600160a01b0316906103e89060040162001ed2565b600060405180830381600087803b1580156200187a57600080fd5b505af11580156200188f573d6000803e3d6000fd5b50505050620019086040518060400160405280601f81526020017f75736572203020746f6b656e206265666f72652062616c616e63652069732000815250600060029054906101000a90046001600160a01b03166001600160a01b03166370a082316002600081548110620005da57620005da62001ebc565b60028054737109709ecfa91a80626ff3989d68f67f5b1dd12d9163ca669fa7916000906200193a576200193a62001ebc565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200198857600080fd5b505af11580156200199d573d6000803e3d6000fd5b5050600054604051630852cd8d60e31b81526103e86004820152620100009091046001600160a01b031692506342966c689150602401600060405180830381600087803b158015620019ee57600080fd5b505af115801562001a03573d6000803e3d6000fd5b5050505062001a7c6040518060400160405280601e81526020017f75736572203020746f6b656e2061667465722062616c616e6365206973200000815250600060029054906101000a90046001600160a01b03166001600160a01b03166370a082316002600081548110620005da57620005da62001ebc565b62001afd6040518060400160405280601081526020016f02a37ba30b61029bab838363c9034b9960851b815250600060029054906101000a90046001600160a01b03166001600160a01b031663ee8b60256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200062b573d6000803e3d6000fd5b62001b0b6103e882620020f9565b600060029054906101000a90046001600160a01b03166001600160a01b031663ee8b60256040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001b5f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b85919062001eeb565b1462000c1757600080fd5b600060029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001be4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c0a919062001eeb565b62001c1790600a62002212565b62001c2690620186a0620020b4565b600060029054906101000a90046001600160a01b03166001600160a01b031663ee8b60256040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001c7a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ca0919062001eeb565b14620001f857600080fd5b60005b600281101562000c1757600262001cc462001db9565b815460018101835560009283526020928390200180546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600c81526b1d5cd95c8818dc99585d195960a21b9181019190915262001d269062001e01565b62001d5b6002828154811062001d405762001d4062001ebc565b6000918252602090912001546001600160a01b031662001e48565b8062001d678162002220565b91505062001cae565b62001767828260405160240162001d899291906200226a565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905262001e8d565b600180546000918262001dcc8362002220565b9190505560405160200162001de391815260200190565b6040516020818303038152906040528051906020012060001c905090565b62000c178160405160240162001e1891906200228e565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905262001e8d565b6040516001600160a01b038216602482015262000c179060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610cf680620022a483390190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03929092168252602082015260400190565b60006020828403121562001efe57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562001f3857818101518382015260200162001f1e565b8381111562001f48576000848401525b50505050565b60006020828403121562001f6157600080fd5b815167ffffffffffffffff8082111562001f7a57600080fd5b818401915084601f83011262001f8f57600080fd5b81518181111562001fa45762001fa462001f05565b604051601f8201601f19908116603f0116810190838211818310171562001fcf5762001fcf62001f05565b8160405282815287602084870101111562001fe957600080fd5b62001ffc83602083016020880162001f1b565b979650505050505050565b600082516200201b81846020870162001f1b565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b6000821982111562002051576200205162002025565b500190565b6001600160e01b03198316815281516000906200207b81600485016020870162001f1b565b919091016004019392505050565b6000602082840312156200209c57600080fd5b81518015158114620020ad57600080fd5b9392505050565b6000816000190483118215151615620020d157620020d162002025565b500290565b600082620020f457634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156200210e576200210e62002025565b500390565b600181815b808511156200215457816000190482111562002138576200213862002025565b808516156200214657918102915b93841c939080029062002118565b509250929050565b6000826200216d575060016200220c565b816200217c575060006200220c565b8160018114620021955760028114620021a057620021c0565b60019150506200220c565b60ff841115620021b457620021b462002025565b50506001821b6200220c565b5060208310610133831016604e8410600b8410161715620021e5575081810a6200220c565b620021f1838362002113565b806000190482111562002208576200220862002025565b0290505b92915050565b6000620020ad83836200215c565b60006001820162002235576200223562002025565b5060010190565b600081518084526200225681602086016020860162001f1b565b601f01601f19169290920160200192915050565b6040815260006200227f60408301856200223c565b90508260208301529392505050565b602081526000620020ad60208301846200223c56fe60a06040523480156200001157600080fd5b5060405162000cf638038062000cf6833981016040819052620000349162000253565b3360805282516200004d906002906020860190620000e0565b50815162000063906003906020850190620000e0565b506200008933620000776012600a620003db565b620000839084620003f0565b62000092565b50505062000469565b6001600160a01b03821660009081526020819052604081208054839290620000bc90849062000412565b925050819055508060046000828254620000d7919062000412565b90915550505050565b828054620000ee906200042d565b90600052602060002090601f0160209004810192826200011257600085556200015d565b82601f106200012d57805160ff19168380011785556200015d565b828001600101855582156200015d579182015b828111156200015d57825182559160200191906001019062000140565b506200016b9291506200016f565b5090565b5b808211156200016b576000815560010162000170565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ae57600080fd5b81516001600160401b0380821115620001cb57620001cb62000186565b604051601f8301601f19908116603f01168101908282118183101715620001f657620001f662000186565b816040528381526020925086838588010111156200021357600080fd5b600091505b8382101562000237578582018301518183018401529082019062000218565b83821115620002495760008385830101525b9695505050505050565b6000806000606084860312156200026957600080fd5b83516001600160401b03808211156200028157600080fd5b6200028f878388016200019c565b94506020860151915080821115620002a657600080fd5b50620002b5868287016200019c565b925050604084015190509250925092565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200031d578160001904821115620003015762000301620002c6565b808516156200030f57918102915b93841c9390800290620002e1565b509250929050565b6000826200033657506001620003d5565b816200034557506000620003d5565b81600181146200035e5760028114620003695762000389565b6001915050620003d5565b60ff8411156200037d576200037d620002c6565b50506001821b620003d5565b5060208310610133831016604e8410600b8410161715620003ae575081810a620003d5565b620003ba8383620002dc565b8060001904821115620003d157620003d1620002c6565b0290505b92915050565b6000620003e9838362000325565b9392505050565b60008160001904831182151516156200040d576200040d620002c6565b500290565b60008219821115620004285762000428620002c6565b500190565b600181811c908216806200044257607f821691505b6020821081036200046357634e487b7160e01b600052602260045260246000fd5b50919050565b60805161086a6200048c600039600081816101cf015261047e015261086a6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c5780638da5cb5b116100665780638da5cb5b146101ca57806395d89b4114610209578063a9059cbb14610211578063ee8b60251461022457600080fd5b806342966c681461016357806355b6ed5c1461017657806370a08231146101a157600080fd5b806306fdde03146100d4578063095ea7b3146100f257806323b872dd1461010757806327e235e31461011a578063313ce5671461014857806340c10f1914610150575b600080fd5b6100dc61022d565b6040516100e99190610644565b60405180910390f35b6101056101003660046106b5565b6102bb565b005b6101056101153660046106df565b610333565b61013a61012836600461071b565b60006020819052908152604090205481565b6040519081526020016100e9565b61013a601281565b61010561015e3660046106b5565b610473565b61010561017136600461073d565b6104e6565b61013a610184366004610756565b600160209081526000928352604080842090915290825290205481565b61013a6101af36600461071b565b6001600160a01b031660009081526020819052604090205490565b6101f17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e9565b6100dc6104f3565b61010561021f3660046106b5565b610500565b61013a60045481565b6002805461023a90610789565b80601f016020809104026020016040519081016040528092919081815260200182805461026690610789565b80156102b35780601f10610288576101008083540402835291602001916102b3565b820191906000526020600020905b81548152906001019060200180831161029657829003601f168201915b505050505081565b3360008181526020819052604090205482908111156102f55760405162461bcd60e51b81526004016102ec906107c3565b60405180910390fd5b3360009081526001602090815260408083206001600160a01b038816845290915281208054859290610328908490610805565b909155505050505050565b6001600160a01b0383166000908152602081905260409020548390829081111561036f5760405162461bcd60e51b81526004016102ec906107c3565b6001600160a01b03851660009081526001602090815260408083203384529091529020548311156103da5760405162461bcd60e51b81526020600482015260156024820152746e6f7420656e6f75676820616c6c6f77616e63657360581b60448201526064016102ec565b6001600160a01b0385166000908152602081905260408120805485929061040290849061081d565b90915550506001600160a01b0384166000908152602081905260408120805485929061042f908490610805565b90915550506001600160a01b03851660009081526001602090815260408083203384529091528120805485929061046790849061081d565b90915550505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104d85760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b60448201526064016102ec565b6104e2828261057d565b5050565b6104f033826105c7565b50565b6003805461023a90610789565b3360008181526020819052604090205482908111156105315760405162461bcd60e51b81526004016102ec906107c3565b336000908152602081905260408120805485929061055090849061081d565b90915550506001600160a01b03841660009081526020819052604081208054859290610328908490610805565b6001600160a01b038216600090815260208190526040812080548392906105a5908490610805565b9250508190555080600460008282546105be9190610805565b90915550505050565b6001600160a01b038216600090815260208190526040902054829082908111156106035760405162461bcd60e51b81526004016102ec906107c3565b6001600160a01b0384166000908152602081905260408120805485929061062b90849061081d565b925050819055508260046000828254610328919061081d565b600060208083528351808285015260005b8181101561067157858101830151858201604001528201610655565b81811115610683576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106b057600080fd5b919050565b600080604083850312156106c857600080fd5b6106d183610699565b946020939093013593505050565b6000806000606084860312156106f457600080fd5b6106fd84610699565b925061070b60208501610699565b9150604084013590509250925092565b60006020828403121561072d57600080fd5b61073682610699565b9392505050565b60006020828403121561074f57600080fd5b5035919050565b6000806040838503121561076957600080fd5b61077283610699565b915061078060208401610699565b90509250929050565b600181811c9082168061079d57607f821691505b6020821081036107bd57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601290820152716e6f7420656e6f7567682062616c616e636560701b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610818576108186107ef565b500190565b60008282101561082f5761082f6107ef565b50039056fea264697066735822122056496f795eed4c9ed8104575a24b14bf8af8cfd4190f7d9bd4104b045a777d9864736f6c634300080d003375736572203120746f6b656e20616674657220646f75626c65207472616e736665722069732075736572203020746f6b656e20616674657220646f75626c65207472616e7366657220697320a2646970667358221220d051d4a1eccdbf54bde013cdcd4e1947cae9e60b9abecc56b919540910f2936764736f6c634300080d0033",
    "sourceMap": "177:3971:5:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;177:3971:5;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "177:3971:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;382:105;;;:::i;:::-;;3464:490;;;:::i;1018:146::-;;;:::i;2620:294::-;;;:::i;1914:700::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;179:14:7;;172:22;154:41;;142:2;127:18;1819:584:0;;;;;;;869:143:5;;;:::i;1298:610::-;;;:::i;3960:186::-;;;:::i;2920:538::-;;;:::i;1170:122::-;;;:::i;1572:26:0:-;;;;;;;;;382:105:5;450:6;425:32;;;;;:::i;:::-;550:2:7;532:21;;;589:1;569:18;;;562:29;-1:-1:-1;;;622:3:7;607:19;;600:35;673:3;666:4;651:20;;644:33;;;714:1;693:19;;;686:30;-1:-1:-1;;;747:3:7;732:19;;725:34;-1:-1:-1;811:18:7;;804:34;;;;791:3;776:19;425:32:5;;;;;;;;;;;;;;;;;;;;;;;416:6;;:41;;;;;-1:-1:-1;;;;;416:41:5;;;;;-1:-1:-1;;;;;416:41:5;;;;;;467:13;:11;:13::i;:::-;382:105::o;3464:490::-;3504:6;;;;;;;;;-1:-1:-1;;;;;3504:6:5;-1:-1:-1;;;;;3504:15:5;;3520:5;3526:1;3520:8;;;;;;;;:::i;:::-;;;;;;;;;;;3504:31;;-1:-1:-1;;;;;;3504:31:5;;;;;;;;;-1:-1:-1;;;;;3520:8:5;;3530:4;;3504:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3555:5:5;:8;;1671:64:0;;-1:-1:-1;3545:9:5;;-1:-1:-1;1695:37:0;;3555:8:5;;;;:::i;:::-;;;;;;;;;;;3545:19;;;;;;-1:-1:-1;;;;;;3545:19:5;;;-1:-1:-1;;;;;3555:8:5;;;3545:19;;;1433:51:7;1406:18;;3545:19:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3574:6;;;;;;;;;-1:-1:-1;;;;;3574:6:5;-1:-1:-1;;;;;3574:14:5;;3589:5;3595:1;3589:8;;;;;;;;:::i;:::-;;;;;;;;;;;3574:30;;-1:-1:-1;;;;;;3574:30:5;;;;;;;;;-1:-1:-1;;;;;3589:8:5;;3599:4;;3574:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3624:5:5;:8;;1671:64:0;;-1:-1:-1;3614:9:5;;-1:-1:-1;3630:1:5;;3624:8;;;;;;:::i;:::-;;;;;;;;;;;3614:19;;;;;;-1:-1:-1;;;;;;3614:19:5;;;-1:-1:-1;;;;;3624:8:5;;;3614:19;;;1433:51:7;1406:18;;3614:19:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3643:6;;;;;;;;;-1:-1:-1;;;;;3643:6:5;-1:-1:-1;;;;;3643:19:5;;3663:5;3669:1;3663:8;;;;;;;;:::i;:::-;;;;;;;;;;;3673:5;:8;;-1:-1:-1;;;;;3663:8:5;;;;;;3673;;;;;;:::i;:::-;;;;;;;;;;;3643:45;;;;;;-1:-1:-1;;;;;;3643:45:5;;;-1:-1:-1;;;;;1780:15:7;;;3643:45:5;;;1762:34:7;3673:8:5;;1812:18:7;;;1805:43;3683:4:5;1864:18:7;;;1857:34;1697:18;;3643:45:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3698:68;;;;;;;;;;;;;;;;;;3739:6;;;;;;;;;-1:-1:-1;;;;;3739:6:5;-1:-1:-1;;;;;3739:16:5;;3756:5;3762:1;3756:8;;;;;;;;:::i;:::-;;;;;;;;;;;3739:26;;;;;;-1:-1:-1;;;;;;3739:26:5;;;-1:-1:-1;;;;;3756:8:5;;;3739:26;;;1433:51:7;1406:18;;3739:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3698:12;:68::i;:::-;3776;;;;;;;;;;;;;;;;;;3817:6;;;;;;;;;-1:-1:-1;;;;;3817:6:5;-1:-1:-1;;;;;3817:16:5;;3834:5;3840:1;3834:8;;;;;;;;:::i;3776:68::-;3862:6;;;;;;;;;-1:-1:-1;;;;;3862:6:5;-1:-1:-1;;;;;3862:16:5;;3879:5;3885:1;3879:8;;;;;;;;:::i;:::-;;;;;;;;;;;3862:26;;;;;;-1:-1:-1;;;;;;3862:26:5;;;-1:-1:-1;;;;;3879:8:5;;;3862:26;;;1433:51:7;1406:18;;3862:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;3854:40;;;;;;3912:6;;;;;;;;;-1:-1:-1;;;;;3912:6:5;-1:-1:-1;;;;;3912:16:5;;3929:5;3935:1;3929:8;;;;;;;;:::i;:::-;;;;;;;;;;;3912:26;;;;;;-1:-1:-1;;;;;;3912:26:5;;;-1:-1:-1;;;;;3929:8:5;;;3912:26;;;1433:51:7;1406:18;;3912:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3942:4;3912:34;3904:43;;;;;1018:146;1131:16;1110:6;;;;;;;;;-1:-1:-1;;;;;1110:6:5;-1:-1:-1;;;;;1110:13:5;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1110:15:5;;;;;;;;;;;;:::i;:::-;1093:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;1083:44;;;;;;:64;1062:95;;;;;2620:294;2657:14;2674:6;;;;;;;;;-1:-1:-1;;;;;2674:6:5;-1:-1:-1;;;;;2674:19:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2657:38;;2705:6;;;;;;;;;-1:-1:-1;;;;;2705:6:5;-1:-1:-1;;;;;2705:11:5;;2717:5;2723:1;2717:8;;;;;;;;:::i;:::-;;;;;;;;;;;2705:27;;-1:-1:-1;;;;;;2705:27:5;;;;;;;;;-1:-1:-1;;;;;2717:8:5;;2727:4;;2705:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2742:55;;;;;;;;;;;;;;-1:-1:-1;;;2742:55:5;;;2775:6;;;;;;;;;-1:-1:-1;;;;;2775:6:5;-1:-1:-1;;;;;2775:19:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2742:55;2832:6;;;;;;;;;-1:-1:-1;;;;;2832:6:5;-1:-1:-1;;;;;2832:19:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2815:13;:6;2824:4;2815:13;:::i;:::-;:38;2807:47;;;;;;2872:6;;;;;;;;;-1:-1:-1;;;;;2872:6:5;-1:-1:-1;;;;;2872:16:5;;2889:5;2895:1;2889:8;;;;;;;;:::i;:::-;;;;;;;;;;;2872:26;;;;;;-1:-1:-1;;;;;;2872:26:5;;;-1:-1:-1;;;;;2889:8:5;;;2872:26;;;1433:51:7;1406:18;;2872:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2902:4;2872:34;2864:43;;;;;;2647:267;2620:294::o;1914:700::-;1961:6;;;;;;;;;-1:-1:-1;;;;;1961:6:5;-1:-1:-1;;;;;1961:15:5;;1977:5;1983:1;1977:8;;;;;;;;:::i;:::-;;;;;;;;;;;1961:31;;-1:-1:-1;;;;;;1961:31:5;;;;;;;;;-1:-1:-1;;;;;1977:8:5;;1987:4;;1961:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2002:110;;;;;;;;;;;;;;;;;;2076:6;;;;;;;;;-1:-1:-1;;;;;2076:6:5;-1:-1:-1;;;;;2076:16:5;;2093:5;2099:1;2093:8;;;;;;;;:::i;2002:110::-;2132:5;:8;;1671:64:0;;2122:9:5;;1695:37:0;;2132:8:5;;;;:::i;:::-;;;;;;;;;;;2122:19;;;;;;-1:-1:-1;;;;;;2122:19:5;;;-1:-1:-1;;;;;2132:8:5;;;2122:19;;;1433:51:7;1406:18;;2122:19:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:6;;;;;;;;;-1:-1:-1;;;;;2151:6:5;-1:-1:-1;;;;;2151:15:5;;2167:5;2173:1;2167:8;;;;;;;;:::i;:::-;;;;;;;;;;;2151:31;;-1:-1:-1;;;;;;2151:31:5;;;;;;;;;-1:-1:-1;;;;;2167:8:5;;2177:4;;2151:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2202:5:5;:8;;1671:64:0;;-1:-1:-1;2192:9:5;;-1:-1:-1;2208:1:5;;2202:8;;;;;;:::i;:::-;;;;;;;;;;;2192:19;;;;;;-1:-1:-1;;;;;;2192:19:5;;;-1:-1:-1;;;;;2202:8:5;;;2192:19;;;1433:51:7;1406:18;;2192:19:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2221:6;;;;;;;;;-1:-1:-1;;;;;2221:6:5;-1:-1:-1;;;;;2221:15:5;;2237:5;2243:1;2237:8;;;;;;;;:::i;:::-;;;;;;;;;;;2221:31;;-1:-1:-1;;;;;;2221:31:5;;;;;;;;;-1:-1:-1;;;;;2237:8:5;;2247:4;;2221:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2262:116;;;;;;;;;;;;;;;;;;2342:6;;;;;;;;;-1:-1:-1;;;;;2342:6:5;-1:-1:-1;;;;;2342:16:5;;2359:5;2365:1;2359:8;;;;;;;;:::i;2262:116::-;2388;;;;;;;;;;;;;;;;;;2468:6;;;;;;;;;-1:-1:-1;;;;;2468:6:5;-1:-1:-1;;;;;2468:16:5;;2485:5;2491:1;2485:8;;;;;;;;:::i;2388:116::-;2522:6;;;;;;;;;-1:-1:-1;;;;;2522:6:5;-1:-1:-1;;;;;2522:16:5;;2539:5;2545:1;2539:8;;;;;;;;:::i;:::-;;;;;;;;;;;2522:26;;;;;;-1:-1:-1;;;;;;2522:26:5;;;-1:-1:-1;;;;;2539:8:5;;;2522:26;;;1433:51:7;1406:18;;2522:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2552:4;2522:34;2514:43;;;;;;2575:6;;;;;;;;;-1:-1:-1;;;;;2575:6:5;-1:-1:-1;;;;;2575:16:5;;2592:5;2598:1;2592:8;;;;;;;;:::i;:::-;;;;;;;;;;;2575:26;;;;;;-1:-1:-1;;;;;;2575:26:5;;;-1:-1:-1;;;;;2592:8:5;;;2575:26;;;1433:51:7;1406:18;;2575:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;2567:40;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;2023:20;;1671:64;;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;869:143:5:-;978:17;959:6;;;;;;;;;-1:-1:-1;;;;;959:6:5;-1:-1:-1;;;;;959:11:5;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1298:610;1339:6;;;;;;;;;-1:-1:-1;;;;;1339:6:5;-1:-1:-1;;;;;1339:15:5;;1355:5;1361:1;1355:8;;;;;;;;:::i;:::-;;;;;;;;;;;1339:31;;-1:-1:-1;;;;;;1339:31:5;;;;;;;;;-1:-1:-1;;;;;1355:8:5;;1365:4;;1339:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1380:110;;;;;;;;;;;;;;;;;;1454:6;;;;;;;;;-1:-1:-1;;;;;1454:6:5;-1:-1:-1;;;;;1454:16:5;;1471:5;1477:1;1471:8;;;;;;;;:::i;1380:110::-;1510:5;:8;;1671:64:0;;1500:9:5;;1695:37:0;;1510:8:5;;;;:::i;:::-;;;;;;;;;;;1500:19;;;;;;-1:-1:-1;;;;;;1500:19:5;;;-1:-1:-1;;;;;1510:8:5;;;1500:19;;;1433:51:7;1406:18;;1500:19:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1529:6;;;;;;;;;-1:-1:-1;;;;;1529:6:5;-1:-1:-1;;;;;1529:15:5;;1545:5;1551:1;1545:8;;;;;;;;:::i;:::-;;;;;;;;;;;1529:31;;-1:-1:-1;;;;;;1529:31:5;;;;;;;;;-1:-1:-1;;;;;1545:8:5;;1555:4;;1529:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:109;;;;;;;;;;;;;;;;;;1643:6;;;;;;;;;-1:-1:-1;;;;;1643:6:5;-1:-1:-1;;;;;1643:16:5;;1660:5;1666:1;1660:8;;;;;;;;:::i;1570:109::-;1689;;;;;;;;;;;;;;;;;;1762:6;;;;;;;;;-1:-1:-1;;;;;1762:6:5;-1:-1:-1;;;;;1762:16:5;;1779:5;1785:1;1779:8;;;;;;;;:::i;3960:186::-;4045:36;;;;;;;;;;;;-1:-1:-1;;;4045:36:5;;;;4011:1;;4034;;4045:36;;4034:1;4067:8;4011:1;4071:4;4067:8;:::i;:::-;4066:14;;;;:::i;4045:36::-;4091:48;;;;;;;;;;;;;;-1:-1:-1;;;4091:48:5;;;4125:13;4091:12;:48::i;:::-;3989:157;;3960:186::o;2920:538::-;2957:14;2974:6;;;;;;;;;-1:-1:-1;;;;;2974:6:5;-1:-1:-1;;;;;2974:19:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2957:38;;3005:6;;;;;;;;;-1:-1:-1;;;;;3005:6:5;-1:-1:-1;;;;;3005:15:5;;3021:5;3027:1;3021:8;;;;;;;;:::i;:::-;;;;;;;;;;;3005:31;;-1:-1:-1;;;;;;3005:31:5;;;;;;;;;-1:-1:-1;;;;;3021:8:5;;3031:4;;3005:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3046:109;;;;;;;;;;;;;;;;;;3119:6;;;;;;;;;-1:-1:-1;;;;;3119:6:5;-1:-1:-1;;;;;3119:16:5;;3136:5;3142:1;3136:8;;;;;;;;:::i;3046:109::-;3175:5;:8;;1671:64:0;;3165:9:5;;1695:37:0;;3175:8:5;;;;:::i;:::-;;;;;;;;;;;3165:19;;;;;;-1:-1:-1;;;;;;3165:19:5;;;-1:-1:-1;;;;;3175:8:5;;;3165:19;;;1433:51:7;1406:18;;3165:19:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3194:6:5;;:17;;-1:-1:-1;;;3194:17:5;;3206:4;3194:17;;;5689:25:7;3194:6:5;;;;-1:-1:-1;;;;;3194:6:5;;-1:-1:-1;3194:11:5;;-1:-1:-1;5662:18:7;;3194:17:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3221:108;;;;;;;;;;;;;;;;;;3293:6;;;;;;;;;-1:-1:-1;;;;;3293:6:5;-1:-1:-1;;;;;3293:16:5;;3310:5;3316:1;3310:8;;;;;;;;:::i;3221:108::-;3339:55;;;;;;;;;;;;;;-1:-1:-1;;;3339:55:5;;;3372:6;;;;;;;;;-1:-1:-1;;;;;3372:6:5;-1:-1:-1;;;;;3372:19:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3339:55;3437:13;3446:4;3437:6;:13;:::i;:::-;3412:6;;;;;;;;;-1:-1:-1;;;;;3412:6:5;-1:-1:-1;;;;;3412:19:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;3404:47;;;;;1170:122;1266:6;;;;;;;;;-1:-1:-1;;;;;1266:6:5;-1:-1:-1;;;;;1266:15:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1262:21;;:2;:21;:::i;:::-;1252:32;;:6;:32;:::i;:::-;1227:6;;;;;;;;;-1:-1:-1;;;;;1227:6:5;-1:-1:-1;;;;;1227:19:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;1219:66;;;;;493:217;539:9;534:170;337:1;550;:10;534:170;;;581:5;592:15;:13;:15::i;:::-;581:27;;;;;;;-1:-1:-1;581:27:5;;;;;;;;;;;-1:-1:-1;;;;;;581:27:5;-1:-1:-1;;;;;581:27:5;;;;;;;;;;622:28;;;;;;;;;;;;-1:-1:-1;;;622:28:5;;;;;;;;;:12;:28::i;:::-;664:29;684:5;690:1;684:8;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;684:8:5;664:19;:29::i;:::-;562:3;;;;:::i;:::-;;;;534:170;;7003:145:2;7070:71;7133:2;7137;7086:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7086:54:2;;;;;;;;;;;;;;-1:-1:-1;;;;;7086:54:2;-1:-1:-1;;;7086:54:2;;;7070:15;:71::i;716:147:5:-;845:3;:5;;758:15;;;845:5;;;:::i;:::-;;;;;834:17;;;;;;5689:25:7;;5677:2;5662:18;;5532:188;834:17:5;;;;;;;;;;;;;824:28;;;;;;816:37;;785:71;;716:147;:::o;6055:121:2:-;6110:59;6165:2;6126:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6126:42:2;;;;;;;;;;;;;;-1:-1:-1;;;;;6126:42:2;-1:-1:-1;;;6126:42:2;;;6110:15;:59::i;1573:123::-;1645:43;;-1:-1:-1;;;;;1451:32:7;;1645:43:2;;;1433:51:7;1629:60:2;;1406:18:7;;1645:43:2;;;-1:-1:-1;;1645:43:2;;;;;;;;;;;;;;-1:-1:-1;;;;;1645:43:2;-1:-1:-1;;;1645:43:2;;;631:333;725:14;;581:42;855:2;842:16;;701:21;;725:14;842:16;581:42;891:5;880:68;871:77;;808:150;;631:333;:::o;-1:-1:-1:-;;;;;;;;:::o;849:127:7:-;910:10;905:3;901:20;898:1;891:31;941:4;938:1;931:15;965:4;962:1;955:15;981:293;-1:-1:-1;;;;;1192:32:7;;;;1174:51;;1256:2;1241:18;;1234:34;1162:2;1147:18;;981:293::o;1902:184::-;1972:6;2025:2;2013:9;2004:7;2000:23;1996:32;1993:52;;;2041:1;2038;2031:12;1993:52;-1:-1:-1;2064:16:7;;1902:184;-1:-1:-1;1902:184:7:o;2091:127::-;2152:10;2147:3;2143:20;2140:1;2133:31;2183:4;2180:1;2173:15;2207:4;2204:1;2197:15;2223:258;2295:1;2305:113;2319:6;2316:1;2313:13;2305:113;;;2395:11;;;2389:18;2376:11;;;2369:39;2341:2;2334:10;2305:113;;;2436:6;2433:1;2430:13;2427:48;;;2471:1;2462:6;2457:3;2453:16;2446:27;2427:48;;2223:258;;;:::o;2486:884::-;2566:6;2619:2;2607:9;2598:7;2594:23;2590:32;2587:52;;;2635:1;2632;2625:12;2587:52;2668:9;2662:16;2697:18;2738:2;2730:6;2727:14;2724:34;;;2754:1;2751;2744:12;2724:34;2792:6;2781:9;2777:22;2767:32;;2837:7;2830:4;2826:2;2822:13;2818:27;2808:55;;2859:1;2856;2849:12;2808:55;2888:2;2882:9;2910:2;2906;2903:10;2900:36;;;2916:18;;:::i;:::-;2991:2;2985:9;2959:2;3045:13;;-1:-1:-1;;3041:22:7;;;3065:2;3037:31;3033:40;3021:53;;;3089:18;;;3109:22;;;3086:46;3083:72;;;3135:18;;:::i;:::-;3175:10;3171:2;3164:22;3210:2;3202:6;3195:18;3250:7;3245:2;3240;3236;3232:11;3228:20;3225:33;3222:53;;;3271:1;3268;3261:12;3222:53;3284:55;3336:2;3331;3323:6;3319:15;3314:2;3310;3306:11;3284:55;:::i;:::-;3358:6;2486:884;-1:-1:-1;;;;;;;2486:884:7:o;3375:276::-;3506:3;3544:6;3538:13;3560:53;3606:6;3601:3;3594:4;3586:6;3582:17;3560:53;:::i;:::-;3629:16;;;;;3375:276;-1:-1:-1;;3375:276:7:o;3656:127::-;3717:10;3712:3;3708:20;3705:1;3698:31;3748:4;3745:1;3738:15;3772:4;3769:1;3762:15;3788:128;3828:3;3859:1;3855:6;3852:1;3849:13;3846:39;;;3865:18;;:::i;:::-;-1:-1:-1;3901:9:7;;3788:128::o;4200:371::-;-1:-1:-1;;;;;;4385:33:7;;4373:46;;4442:13;;4355:3;;4464:61;4442:13;4514:1;4505:11;;4498:4;4486:17;;4464:61;:::i;:::-;4545:16;;;;4563:1;4541:24;;4200:371;-1:-1:-1;;;4200:371:7:o;4855:277::-;4922:6;4975:2;4963:9;4954:7;4950:23;4946:32;4943:52;;;4991:1;4988;4981:12;4943:52;5023:9;5017:16;5076:5;5069:13;5062:21;5055:5;5052:32;5042:60;;5098:1;5095;5088:12;5042:60;5121:5;4855:277;-1:-1:-1;;;4855:277:7:o;5137:168::-;5177:7;5243:1;5239;5235:6;5231:14;5228:1;5225:21;5220:1;5213:9;5206:17;5202:45;5199:71;;;5250:18;;:::i;:::-;-1:-1:-1;5290:9:7;;5137:168::o;5310:217::-;5350:1;5376;5366:132;;5420:10;5415:3;5411:20;5408:1;5401:31;5455:4;5452:1;5445:15;5483:4;5480:1;5473:15;5366:132;-1:-1:-1;5512:9:7;;5310:217::o;5725:125::-;5765:4;5793:1;5790;5787:8;5784:34;;;5798:18;;:::i;:::-;-1:-1:-1;5835:9:7;;5725:125::o;5855:422::-;5944:1;5987:5;5944:1;6001:270;6022:7;6012:8;6009:21;6001:270;;;6081:4;6077:1;6073:6;6069:17;6063:4;6060:27;6057:53;;;6090:18;;:::i;:::-;6140:7;6130:8;6126:22;6123:55;;;6160:16;;;;6123:55;6239:22;;;;6199:15;;;;6001:270;;;6005:3;5855:422;;;;;:::o;6282:806::-;6331:5;6361:8;6351:80;;-1:-1:-1;6402:1:7;6416:5;;6351:80;6450:4;6440:76;;-1:-1:-1;6487:1:7;6501:5;;6440:76;6532:4;6550:1;6545:59;;;;6618:1;6613:130;;;;6525:218;;6545:59;6575:1;6566:10;;6589:5;;;6613:130;6650:3;6640:8;6637:17;6634:43;;;6657:18;;:::i;:::-;-1:-1:-1;;6713:1:7;6699:16;;6728:5;;6525:218;;6827:2;6817:8;6814:16;6808:3;6802:4;6799:13;6795:36;6789:2;6779:8;6776:16;6771:2;6765:4;6762:12;6758:35;6755:77;6752:159;;;-1:-1:-1;6864:19:7;;;6896:5;;6752:159;6943:34;6968:8;6962:4;6943:34;:::i;:::-;7013:6;7009:1;7005:6;7001:19;6992:7;6989:32;6986:58;;;7024:18;;:::i;:::-;7062:20;;-1:-1:-1;6282:806:7;;;;;:::o;7093:131::-;7153:5;7182:36;7209:8;7203:4;7182:36;:::i;7229:135::-;7268:3;7289:17;;;7286:43;;7309:18;;:::i;:::-;-1:-1:-1;7356:1:7;7345:13;;7229:135::o;7369:258::-;7411:3;7449:5;7443:12;7476:6;7471:3;7464:19;7492:63;7548:6;7541:4;7536:3;7532:14;7525:4;7518:5;7514:16;7492:63;:::i;:::-;7609:2;7588:15;-1:-1:-1;;7584:29:7;7575:39;;;;7616:4;7571:50;;7369:258;-1:-1:-1;;7369:258:7:o;7632:291::-;7809:2;7798:9;7791:21;7772:4;7829:45;7870:2;7859:9;7855:18;7847:6;7829:45;:::i;:::-;7821:53;;7910:6;7905:2;7894:9;7890:18;7883:34;7632:291;;;;;:::o;8110:220::-;8259:2;8248:9;8241:21;8222:4;8279:45;8320:2;8309:9;8305:18;8297:6;8279:45;:::i",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/jag/foundry/foundry_solidity/test/erc20.t.sol",
    "id": 11013,
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "ERC20": [
        10329
      ],
      "Erc20Test": [
        11012
      ],
      "Vm": [
        2000
      ],
      "console2": [
        10064
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4110:5",
    "nodes": [
      {
        "id": 10406,
        "nodeType": "PragmaDirective",
        "src": "39:24:5",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 10407,
        "nodeType": "ImportDirective",
        "src": "65:26:5",
        "absolutePath": "/Users/jag/foundry/foundry_solidity/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11013,
        "sourceUnit": 1787,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10408,
        "nodeType": "ImportDirective",
        "src": "92:23:5",
        "absolutePath": "/Users/jag/foundry/foundry_solidity/src/erc20.sol",
        "file": "src/erc20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11013,
        "sourceUnit": 10330,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10409,
        "nodeType": "ImportDirective",
        "src": "116:26:5",
        "absolutePath": "/Users/jag/foundry/foundry_solidity/lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11013,
        "sourceUnit": 2001,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10410,
        "nodeType": "ImportDirective",
        "src": "143:32:5",
        "absolutePath": "/Users/jag/foundry/foundry_solidity/lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11013,
        "sourceUnit": 10065,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11012,
        "nodeType": "ContractDefinition",
        "src": "177:3971:5",
        "nodes": [
          {
            "id": 10415,
            "nodeType": "VariableDeclaration",
            "src": "212:12:5",
            "constant": false,
            "mutability": "mutable",
            "name": "_erc20",
            "nameLocation": "218:6:5",
            "scope": 11012,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$10329",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 10414,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10413,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10329,
                "src": "212:5:5"
              },
              "referencedDeclaration": 10329,
              "src": "212:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$10329",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 10421,
            "nodeType": "VariableDeclaration",
            "src": "230:42:5",
            "constant": true,
            "mutability": "constant",
            "name": "_Vm",
            "nameLocation": "250:3:5",
            "scope": 11012,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$2000",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 10417,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10416,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2000,
                "src": "230:2:5"
              },
              "referencedDeclaration": 2000,
              "src": "230:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$2000",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 10419,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 107,
                  "src": "259:12:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 10418,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2000,
                "src": "256:2:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$2000_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 10420,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "256:16:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$2000",
                "typeString": "contract Vm"
              }
            },
            "visibility": "private"
          },
          {
            "id": 10423,
            "nodeType": "VariableDeclaration",
            "src": "278:19:5",
            "constant": false,
            "mutability": "mutable",
            "name": "_id",
            "nameLocation": "294:3:5",
            "scope": 11012,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10422,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "278:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 10426,
            "nodeType": "VariableDeclaration",
            "src": "303:35:5",
            "constant": true,
            "mutability": "constant",
            "name": "_users",
            "nameLocation": "328:6:5",
            "scope": 11012,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10424,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "303:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 10425,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "337:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "id": 10429,
            "nodeType": "VariableDeclaration",
            "src": "344:31:5",
            "constant": false,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "370:5:5",
            "scope": 11012,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 10427,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "344:15:5",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 10428,
              "nodeType": "ArrayTypeName",
              "src": "344:17:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 10446,
            "nodeType": "FunctionDefinition",
            "src": "382:105:5",
            "body": {
              "id": 10445,
              "nodeType": "Block",
              "src": "406:81:5",
              "statements": [
                {
                  "expression": {
                    "id": 10440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10432,
                      "name": "_erc20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10415,
                      "src": "416:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$10329",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "54657374",
                          "id": 10436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "435:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                            "typeString": "literal_string \"Test\""
                          },
                          "value": "Test"
                        },
                        {
                          "hexValue": "545354",
                          "id": 10437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "443:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                            "typeString": "literal_string \"TST\""
                          },
                          "value": "TST"
                        },
                        {
                          "hexValue": "313030303030",
                          "id": 10438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "450:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                            "typeString": "literal_string \"Test\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                            "typeString": "literal_string \"TST\""
                          },
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          }
                        ],
                        "id": 10435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "425:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_ERC20_$10329_$",
                          "typeString": "function (string memory,string memory,uint256) returns (contract ERC20)"
                        },
                        "typeName": {
                          "id": 10434,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 10433,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 10329,
                            "src": "429:5:5"
                          },
                          "referencedDeclaration": 10329,
                          "src": "429:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$10329",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 10439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "425:32:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$10329",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "416:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$10329",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 10441,
                  "nodeType": "ExpressionStatement",
                  "src": "416:41:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10442,
                      "name": "createUsers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10482,
                      "src": "467:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "467:13:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10444,
                  "nodeType": "ExpressionStatement",
                  "src": "467:13:5"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "391:5:5",
            "parameters": {
              "id": 10430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:2:5"
            },
            "returnParameters": {
              "id": 10431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:0:5"
            },
            "scope": 11012,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10482,
            "nodeType": "FunctionDefinition",
            "src": "493:217:5",
            "body": {
              "id": 10481,
              "nodeType": "Block",
              "src": "524:186:5",
              "statements": [
                {
                  "body": {
                    "id": 10479,
                    "nodeType": "Block",
                    "src": "567:137:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 10461,
                                "name": "createAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10508,
                                "src": "592:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_payable_$",
                                  "typeString": "function () returns (address payable)"
                                }
                              },
                              "id": 10462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "592:15:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 10458,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10429,
                              "src": "581:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 10460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "581:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                              "typeString": "function (address payable[] storage pointer,address payable)"
                            }
                          },
                          "id": 10463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "581:27:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10464,
                        "nodeType": "ExpressionStatement",
                        "src": "581:27:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "757365722063726561746564",
                              "id": 10468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "635:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_915d46ab407615aaddd8ba4b03f14f22558eeb876420f650a54af77b0a8ee000",
                                "typeString": "literal_string \"user created\""
                              },
                              "value": "user created"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_915d46ab407615aaddd8ba4b03f14f22558eeb876420f650a54af77b0a8ee000",
                                "typeString": "literal_string \"user created\""
                              }
                            ],
                            "expression": {
                              "id": 10465,
                              "name": "console2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10064,
                              "src": "622:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                                "typeString": "type(library console2)"
                              }
                            },
                            "id": 10467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2595,
                            "src": "622:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) view"
                            }
                          },
                          "id": 10469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "622:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10470,
                        "nodeType": "ExpressionStatement",
                        "src": "622:28:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10474,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10429,
                                "src": "684:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                  "typeString": "address payable[] storage ref"
                                }
                              },
                              "id": 10476,
                              "indexExpression": {
                                "id": 10475,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10450,
                                "src": "690:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "684:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 10471,
                              "name": "console2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10064,
                              "src": "664:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                                "typeString": "type(library console2)"
                              }
                            },
                            "id": 10473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "logAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2105,
                            "src": "664:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 10477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "664:29:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10478,
                        "nodeType": "ExpressionStatement",
                        "src": "664:29:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10452,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10450,
                      "src": "550:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 10453,
                      "name": "_users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10426,
                      "src": "554:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "550:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10480,
                  "initializationExpression": {
                    "assignments": [
                      10450
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10450,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "547:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 10480,
                        "src": "539:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10449,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "539:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 10451,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "539:9:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 10456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "562:3:5",
                      "subExpression": {
                        "id": 10455,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10450,
                        "src": "562:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10457,
                    "nodeType": "ExpressionStatement",
                    "src": "562:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "534:170:5"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUsers",
            "nameLocation": "502:11:5",
            "parameters": {
              "id": 10447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:2:5"
            },
            "returnParameters": {
              "id": 10448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:0:5"
            },
            "scope": 11012,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 10508,
            "nodeType": "FunctionDefinition",
            "src": "716:147:5",
            "body": {
              "id": 10507,
              "nodeType": "Block",
              "src": "775:88:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 10499,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "845:5:5",
                                            "subExpression": {
                                              "id": 10498,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 10423,
                                              "src": "845:3:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 10496,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "834:3:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 10497,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "encode",
                                          "nodeType": "MemberAccess",
                                          "src": "834:10:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 10500,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "834:17:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 10495,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "824:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 10501,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "824:28:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 10494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "816:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 10493,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "816:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "816:37:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 10492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "808:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 10491,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "808:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "808:46:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 10490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "800:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10489,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "800:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "800:55:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "792:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 10487,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "792:8:5",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 10505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "792:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 10486,
                  "id": 10506,
                  "nodeType": "Return",
                  "src": "785:71:5"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAddress",
            "nameLocation": "725:13:5",
            "parameters": {
              "id": 10483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:2:5"
            },
            "returnParameters": {
              "id": 10486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10485,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10508,
                  "src": "758:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 10484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "757:17:5"
            },
            "scope": 11012,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 10527,
            "nodeType": "FunctionDefinition",
            "src": "869:143:5",
            "body": {
              "id": 10526,
              "nodeType": "Block",
              "src": "901:111:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 10523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 10515,
                                      "name": "_erc20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10415,
                                      "src": "959:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$10329",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 10516,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "name",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10084,
                                    "src": "959:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () view external returns (string memory)"
                                    }
                                  },
                                  "id": 10517,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "959:13:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 10513,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "942:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 10514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "942:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 10518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "942:31:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 10512,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "932:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 10519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "932:42:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "54657374",
                              "id": 10521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "988:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                                "typeString": "literal_string \"Test\""
                              },
                              "value": "Test"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                                "typeString": "literal_string \"Test\""
                              }
                            ],
                            "id": 10520,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "978:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 10522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "978:17:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "932:63:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "911:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "911:94:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10525,
                  "nodeType": "ExpressionStatement",
                  "src": "911:94:5"
                }
              ]
            },
            "functionSelector": "cc8668de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testName",
            "nameLocation": "878:8:5",
            "parameters": {
              "id": 10509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "886:2:5"
            },
            "returnParameters": {
              "id": 10510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:5"
            },
            "scope": 11012,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10546,
            "nodeType": "FunctionDefinition",
            "src": "1018:146:5",
            "body": {
              "id": 10545,
              "nodeType": "Block",
              "src": "1052:112:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 10542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 10534,
                                      "name": "_erc20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10415,
                                      "src": "1110:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$10329",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 10535,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "symbol",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10086,
                                    "src": "1110:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () view external returns (string memory)"
                                    }
                                  },
                                  "id": 10536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1110:15:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 10532,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1093:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 10533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1093:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 10537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1093:33:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 10531,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1083:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 10538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1083:44:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "545354",
                              "id": 10540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1141:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                                "typeString": "literal_string \"TST\""
                              },
                              "value": "TST"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                                "typeString": "literal_string \"TST\""
                              }
                            ],
                            "id": 10539,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1131:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 10541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1131:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1083:64:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1062:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1062:95:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10544,
                  "nodeType": "ExpressionStatement",
                  "src": "1062:95:5"
                }
              ]
            },
            "functionSelector": "77fc70c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSymbol",
            "nameLocation": "1027:10:5",
            "parameters": {
              "id": 10528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:2:5"
            },
            "returnParameters": {
              "id": 10529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1052:0:5"
            },
            "scope": 11012,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10565,
            "nodeType": "FunctionDefinition",
            "src": "1170:122:5",
            "body": {
              "id": 10564,
              "nodeType": "Block",
              "src": "1209:83:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 10550,
                              "name": "_erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10415,
                              "src": "1227:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$10329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 10551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSuppply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10091,
                            "src": "1227:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 10552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1227:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "313030303030",
                            "id": 10553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1252:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 10554,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1262:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 10555,
                                      "name": "_erc20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10415,
                                      "src": "1266:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$10329",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 10556,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10089,
                                    "src": "1266:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 10557,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1266:17:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1262:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 10559,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1261:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1252:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1227:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1219:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1219:66:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10563,
                  "nodeType": "ExpressionStatement",
                  "src": "1219:66:5"
                }
              ]
            },
            "functionSelector": "eb7492d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTotalSupply",
            "nameLocation": "1179:15:5",
            "parameters": {
              "id": 10547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1194:2:5"
            },
            "returnParameters": {
              "id": 10548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1209:0:5"
            },
            "scope": 11012,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10653,
            "nodeType": "FunctionDefinition",
            "src": "1298:610:5",
            "body": {
              "id": 10652,
              "nodeType": "Block",
              "src": "1329:579:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10571,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "1355:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10573,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1361:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1355:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 10574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1365:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 10568,
                        "name": "_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "1339:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$10329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10232,
                      "src": "1339:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 10575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10576,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "75736572203020746f6b656e206265666f7265207472616e7366657220697320",
                        "id": 10580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1406:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85065f245b338f2ba5e6bb07b8f730210d0efa67e39779f7de3fcb5c4345afef",
                          "typeString": "literal_string \"user 0 token before transfer is \""
                        },
                        "value": "user 0 token before transfer is "
                      },
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 10583,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10429,
                              "src": "1471:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 10585,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 10584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1477:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1471:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 10581,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10415,
                            "src": "1454:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$10329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10166,
                          "src": "1454:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1454:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_85065f245b338f2ba5e6bb07b8f730210d0efa67e39779f7de3fcb5c4345afef",
                          "typeString": "literal_string \"user 0 token before transfer is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10577,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "1380:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 10579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "1380:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:110:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10588,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:110:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10592,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "1510:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10594,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1516:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1510:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 10589,
                        "name": "_Vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10421,
                        "src": "1500:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$2000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1874,
                      "src": "1500:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1500:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10596,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:19:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10600,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "1545:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10602,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 10601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1551:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1545:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 10603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1555:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 10597,
                        "name": "_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "1529:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$10329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10232,
                      "src": "1529:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 10604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1529:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10605,
                  "nodeType": "ExpressionStatement",
                  "src": "1529:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "75736572203020746f6b656e206166746572207472616e7366657220697320",
                        "id": 10609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1596:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8d5f928692612a989ef71d035f91359ac81c1501d76704c2a8677adf0f54128",
                          "typeString": "literal_string \"user 0 token after transfer is \""
                        },
                        "value": "user 0 token after transfer is "
                      },
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 10612,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10429,
                              "src": "1660:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 10614,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 10613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1666:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1660:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 10610,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10415,
                            "src": "1643:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$10329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10166,
                          "src": "1643:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1643:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e8d5f928692612a989ef71d035f91359ac81c1501d76704c2a8677adf0f54128",
                          "typeString": "literal_string \"user 0 token after transfer is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10606,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "1570:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 10608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "1570:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:109:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10617,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:109:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "75736572203120746f6b656e206166746572207472616e7366657220697320",
                        "id": 10621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1715:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_148a57b451e2053d3106ff2281c6dd0acb1de8a44162eb7e2d41a75010e33dcd",
                          "typeString": "literal_string \"user 1 token after transfer is \""
                        },
                        "value": "user 1 token after transfer is "
                      },
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 10624,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10429,
                              "src": "1779:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 10626,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 10625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1785:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1779:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 10622,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10415,
                            "src": "1762:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$10329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10166,
                          "src": "1762:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1762:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_148a57b451e2053d3106ff2281c6dd0acb1de8a44162eb7e2d41a75010e33dcd",
                          "typeString": "literal_string \"user 1 token after transfer is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10618,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "1689:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 10620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "1689:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1689:109:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10629,
                  "nodeType": "ExpressionStatement",
                  "src": "1689:109:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10633,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10429,
                                "src": "1833:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                  "typeString": "address payable[] storage ref"
                                }
                              },
                              "id": 10635,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 10634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1839:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1833:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 10631,
                              "name": "_erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10415,
                              "src": "1816:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$10329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 10632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10166,
                            "src": "1816:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 10636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1816:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1846:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1816:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1808:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10640,
                  "nodeType": "ExpressionStatement",
                  "src": "1808:40:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10644,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10429,
                                "src": "1883:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                  "typeString": "address payable[] storage ref"
                                }
                              },
                              "id": 10646,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 10645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1889:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1883:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 10642,
                              "name": "_erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10415,
                              "src": "1866:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$10329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 10643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10166,
                            "src": "1866:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 10647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1866:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 10648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1896:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "1866:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1858:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1858:43:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10651,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:43:5"
                }
              ]
            },
            "functionSelector": "d591221f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransfer",
            "nameLocation": "1307:12:5",
            "parameters": {
              "id": 10566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1319:2:5"
            },
            "returnParameters": {
              "id": 10567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1329:0:5"
            },
            "scope": 11012,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10758,
            "nodeType": "FunctionDefinition",
            "src": "1914:700:5",
            "body": {
              "id": 10757,
              "nodeType": "Block",
              "src": "1951:663:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10659,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "1977:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10661,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1983:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1977:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 10662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1987:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 10656,
                        "name": "_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "1961:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$10329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10232,
                      "src": "1961:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 10663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1961:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10664,
                  "nodeType": "ExpressionStatement",
                  "src": "1961:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "75736572203020746f6b656e206265666f7265207472616e7366657220697320",
                        "id": 10668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2028:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85065f245b338f2ba5e6bb07b8f730210d0efa67e39779f7de3fcb5c4345afef",
                          "typeString": "literal_string \"user 0 token before transfer is \""
                        },
                        "value": "user 0 token before transfer is "
                      },
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 10671,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10429,
                              "src": "2093:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 10673,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 10672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2099:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2093:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 10669,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10415,
                            "src": "2076:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$10329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10166,
                          "src": "2076:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2076:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_85065f245b338f2ba5e6bb07b8f730210d0efa67e39779f7de3fcb5c4345afef",
                          "typeString": "literal_string \"user 0 token before transfer is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10665,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "2002:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 10667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "2002:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2002:110:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10676,
                  "nodeType": "ExpressionStatement",
                  "src": "2002:110:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10680,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "2132:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10682,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2138:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2132:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 10677,
                        "name": "_Vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10421,
                        "src": "2122:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$2000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1874,
                      "src": "2122:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2122:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10684,
                  "nodeType": "ExpressionStatement",
                  "src": "2122:19:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10688,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "2167:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10690,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 10689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2173:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2167:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 10691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2177:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 10685,
                        "name": "_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "2151:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$10329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10232,
                      "src": "2151:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 10692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2151:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10693,
                  "nodeType": "ExpressionStatement",
                  "src": "2151:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10697,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "2202:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10699,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 10698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2208:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2202:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 10694,
                        "name": "_Vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10421,
                        "src": "2192:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$2000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1874,
                      "src": "2192:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2192:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10701,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:19:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10705,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "2237:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10707,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2243:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2237:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 10708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2247:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 10702,
                        "name": "_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "2221:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$10329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10232,
                      "src": "2221:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 10709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2221:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10710,
                  "nodeType": "ExpressionStatement",
                  "src": "2221:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "75736572203020746f6b656e20616674657220646f75626c65207472616e7366657220697320",
                        "id": 10714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2288:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77fb479b656a53cd397c5a4e5f4734a77eb05a6fb1c913decdf2095ad8779600",
                          "typeString": "literal_string \"user 0 token after double transfer is \""
                        },
                        "value": "user 0 token after double transfer is "
                      },
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 10717,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10429,
                              "src": "2359:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 10719,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 10718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2365:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2359:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 10715,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10415,
                            "src": "2342:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$10329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10166,
                          "src": "2342:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2342:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_77fb479b656a53cd397c5a4e5f4734a77eb05a6fb1c913decdf2095ad8779600",
                          "typeString": "literal_string \"user 0 token after double transfer is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10711,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "2262:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 10713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "2262:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2262:116:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10722,
                  "nodeType": "ExpressionStatement",
                  "src": "2262:116:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "75736572203120746f6b656e20616674657220646f75626c65207472616e7366657220697320",
                        "id": 10726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2414:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_637c79b95b7eb532f569a537aeb27e10060f74219e1f72da70004c0b31c9e9fe",
                          "typeString": "literal_string \"user 1 token after double transfer is \""
                        },
                        "value": "user 1 token after double transfer is "
                      },
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 10729,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10429,
                              "src": "2485:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 10731,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 10730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2491:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2485:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 10727,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10415,
                            "src": "2468:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$10329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10166,
                          "src": "2468:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2468:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_637c79b95b7eb532f569a537aeb27e10060f74219e1f72da70004c0b31c9e9fe",
                          "typeString": "literal_string \"user 1 token after double transfer is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10723,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "2388:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 10725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "2388:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:116:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10734,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:116:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10738,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10429,
                                "src": "2539:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                  "typeString": "address payable[] storage ref"
                                }
                              },
                              "id": 10740,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 10739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2545:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2539:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 10736,
                              "name": "_erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10415,
                              "src": "2522:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$10329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 10737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10166,
                            "src": "2522:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 10741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2522:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 10742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2552:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "2522:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2514:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2514:43:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10745,
                  "nodeType": "ExpressionStatement",
                  "src": "2514:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10749,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10429,
                                "src": "2592:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                  "typeString": "address payable[] storage ref"
                                }
                              },
                              "id": 10751,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 10750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2598:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2592:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 10747,
                              "name": "_erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10415,
                              "src": "2575:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$10329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 10748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10166,
                            "src": "2575:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 10752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2575:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2605:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2575:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10746,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2567:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2567:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10756,
                  "nodeType": "ExpressionStatement",
                  "src": "2567:40:5"
                }
              ]
            },
            "functionSelector": "a46f4bd6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDoubleTransfer",
            "nameLocation": "1923:18:5",
            "parameters": {
              "id": 10654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1941:2:5"
            },
            "returnParameters": {
              "id": 10655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1951:0:5"
            },
            "scope": 11012,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10807,
            "nodeType": "FunctionDefinition",
            "src": "2620:294:5",
            "body": {
              "id": 10806,
              "nodeType": "Block",
              "src": "2647:267:5",
              "statements": [
                {
                  "assignments": [
                    10762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10762,
                      "mutability": "mutable",
                      "name": "supply",
                      "nameLocation": "2665:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 10806,
                      "src": "2657:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10761,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2657:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10766,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10763,
                        "name": "_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "2674:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$10329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSuppply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10091,
                      "src": "2674:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 10765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2674:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2657:38:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10770,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "2717:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10772,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2723:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2717:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 10773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2727:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 10767,
                        "name": "_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "2705:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$10329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10316,
                      "src": "2705:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 10774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2705:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10775,
                  "nodeType": "ExpressionStatement",
                  "src": "2705:27:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "546f74616c20537570706c7920697320",
                        "id": 10779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2755:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_791f445609a3f37ce130e44b2c8edf432b3433d75c005bbcba627ba257a17024",
                          "typeString": "literal_string \"Total Supply is \""
                        },
                        "value": "Total Supply is "
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10780,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10415,
                            "src": "2775:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$10329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSuppply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10091,
                          "src": "2775:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 10782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2775:21:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_791f445609a3f37ce130e44b2c8edf432b3433d75c005bbcba627ba257a17024",
                          "typeString": "literal_string \"Total Supply is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10776,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "2742:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 10778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "2742:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2742:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10784,
                  "nodeType": "ExpressionStatement",
                  "src": "2742:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10786,
                            "name": "supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10762,
                            "src": "2815:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 10787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2824:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "2815:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 10789,
                              "name": "_erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10415,
                              "src": "2832:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$10329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 10790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSuppply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10091,
                            "src": "2832:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 10791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2832:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2815:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2807:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2807:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10794,
                  "nodeType": "ExpressionStatement",
                  "src": "2807:47:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10798,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10429,
                                "src": "2889:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                  "typeString": "address payable[] storage ref"
                                }
                              },
                              "id": 10800,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 10799,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2895:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2889:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 10796,
                              "name": "_erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10415,
                              "src": "2872:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$10329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 10797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10166,
                            "src": "2872:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 10801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2872:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 10802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2902:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "2872:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2864:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2864:43:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10805,
                  "nodeType": "ExpressionStatement",
                  "src": "2864:43:5"
                }
              ]
            },
            "functionSelector": "9642ddaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMint",
            "nameLocation": "2629:8:5",
            "parameters": {
              "id": 10759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2637:2:5"
            },
            "returnParameters": {
              "id": 10760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2647:0:5"
            },
            "scope": 11012,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10883,
            "nodeType": "FunctionDefinition",
            "src": "2920:538:5",
            "body": {
              "id": 10882,
              "nodeType": "Block",
              "src": "2947:511:5",
              "statements": [
                {
                  "assignments": [
                    10811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10811,
                      "mutability": "mutable",
                      "name": "supply",
                      "nameLocation": "2965:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 10882,
                      "src": "2957:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10810,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2957:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10815,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10812,
                        "name": "_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "2974:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$10329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSuppply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10091,
                      "src": "2974:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 10814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2974:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2957:38:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10819,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "3021:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10821,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3027:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3021:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 10822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3031:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 10816,
                        "name": "_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "3005:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$10329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10232,
                      "src": "3005:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 10823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3005:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10824,
                  "nodeType": "ExpressionStatement",
                  "src": "3005:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "75736572203020746f6b656e206265666f72652062616c616e636520697320",
                        "id": 10828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3072:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6e8eda4fc62c15e4ab820ab9d797aacf78de54a580eb07f4b396a0361324eae",
                          "typeString": "literal_string \"user 0 token before balance is \""
                        },
                        "value": "user 0 token before balance is "
                      },
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 10831,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10429,
                              "src": "3136:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 10833,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 10832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3142:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3136:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 10829,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10415,
                            "src": "3119:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$10329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10166,
                          "src": "3119:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3119:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b6e8eda4fc62c15e4ab820ab9d797aacf78de54a580eb07f4b396a0361324eae",
                          "typeString": "literal_string \"user 0 token before balance is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10825,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "3046:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 10827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "3046:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3046:109:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10836,
                  "nodeType": "ExpressionStatement",
                  "src": "3046:109:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10840,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "3175:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10842,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3181:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3175:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 10837,
                        "name": "_Vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10421,
                        "src": "3165:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$2000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1874,
                      "src": "3165:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3165:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10844,
                  "nodeType": "ExpressionStatement",
                  "src": "3165:19:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 10848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3206:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 10845,
                        "name": "_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "3194:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$10329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10328,
                      "src": "3194:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 10849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3194:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10850,
                  "nodeType": "ExpressionStatement",
                  "src": "3194:17:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "75736572203020746f6b656e2061667465722062616c616e636520697320",
                        "id": 10854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3247:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef9307adb3b59aa753fdce56bb9bd561f4e90c7db0f7808bfc9dcdb88770bceb",
                          "typeString": "literal_string \"user 0 token after balance is \""
                        },
                        "value": "user 0 token after balance is "
                      },
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 10857,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10429,
                              "src": "3310:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 10859,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 10858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3316:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3310:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 10855,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10415,
                            "src": "3293:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$10329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10166,
                          "src": "3293:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3293:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ef9307adb3b59aa753fdce56bb9bd561f4e90c7db0f7808bfc9dcdb88770bceb",
                          "typeString": "literal_string \"user 0 token after balance is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10851,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "3221:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 10853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "3221:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3221:108:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10862,
                  "nodeType": "ExpressionStatement",
                  "src": "3221:108:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "546f74616c20537570706c7920697320",
                        "id": 10866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3352:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_791f445609a3f37ce130e44b2c8edf432b3433d75c005bbcba627ba257a17024",
                          "typeString": "literal_string \"Total Supply is \""
                        },
                        "value": "Total Supply is "
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10867,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10415,
                            "src": "3372:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$10329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSuppply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10091,
                          "src": "3372:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 10869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3372:21:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_791f445609a3f37ce130e44b2c8edf432b3433d75c005bbcba627ba257a17024",
                          "typeString": "literal_string \"Total Supply is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10863,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "3339:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 10865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "3339:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3339:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10871,
                  "nodeType": "ExpressionStatement",
                  "src": "3339:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 10873,
                              "name": "_erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10415,
                              "src": "3412:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$10329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 10874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSuppply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10091,
                            "src": "3412:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 10875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3412:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10876,
                            "name": "supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10811,
                            "src": "3437:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 10877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3446:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "3437:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3412:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10872,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3404:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3404:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10881,
                  "nodeType": "ExpressionStatement",
                  "src": "3404:47:5"
                }
              ]
            },
            "functionSelector": "e13aba48",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBurn",
            "nameLocation": "2929:8:5",
            "parameters": {
              "id": 10808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2937:2:5"
            },
            "returnParameters": {
              "id": 10809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2947:0:5"
            },
            "scope": 11012,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10979,
            "nodeType": "FunctionDefinition",
            "src": "3464:490:5",
            "body": {
              "id": 10978,
              "nodeType": "Block",
              "src": "3494:460:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10889,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "3520:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10891,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3526:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3520:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 10892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3530:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 10886,
                        "name": "_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "3504:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$10329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10232,
                      "src": "3504:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 10893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3504:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10894,
                  "nodeType": "ExpressionStatement",
                  "src": "3504:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10898,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "3555:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10900,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3561:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3555:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 10895,
                        "name": "_Vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10421,
                        "src": "3545:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$2000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1874,
                      "src": "3545:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3545:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10902,
                  "nodeType": "ExpressionStatement",
                  "src": "3545:19:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10906,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "3589:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10908,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 10907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3595:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3589:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 10909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3599:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 10903,
                        "name": "_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "3574:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$10329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10254,
                      "src": "3574:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 10910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3574:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10911,
                  "nodeType": "ExpressionStatement",
                  "src": "3574:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10915,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "3624:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10917,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 10916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3630:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3624:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 10912,
                        "name": "_Vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10421,
                        "src": "3614:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$2000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1874,
                      "src": "3614:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3614:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10919,
                  "nodeType": "ExpressionStatement",
                  "src": "3614:19:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10923,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "3663:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10925,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 10924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3669:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3663:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 10926,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10429,
                          "src": "3673:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[] storage ref"
                          }
                        },
                        "id": 10928,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 10927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3679:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3673:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 10929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3683:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 10920,
                        "name": "_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10415,
                        "src": "3643:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$10329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10301,
                      "src": "3643:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 10930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3643:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10931,
                  "nodeType": "ExpressionStatement",
                  "src": "3643:45:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "75736572203020746f6b656e2062616c616e636520697320",
                        "id": 10935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3711:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d2333beaf4ee4483fe22ee4cb7ee4cd428b82bd2ae3a31df44534d917e6d7b2",
                          "typeString": "literal_string \"user 0 token balance is \""
                        },
                        "value": "user 0 token balance is "
                      },
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 10938,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10429,
                              "src": "3756:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 10940,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 10939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3762:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3756:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 10936,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10415,
                            "src": "3739:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$10329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10166,
                          "src": "3739:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3739:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9d2333beaf4ee4483fe22ee4cb7ee4cd428b82bd2ae3a31df44534d917e6d7b2",
                          "typeString": "literal_string \"user 0 token balance is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10932,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "3698:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 10934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "3698:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3698:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10943,
                  "nodeType": "ExpressionStatement",
                  "src": "3698:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "75736572203120746f6b656e2062616c616e636520697320",
                        "id": 10947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3789:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_846145ee7cbb3bc7a5df55b95dc9a31b92b5d3ff867197a81d3228d619aea5a8",
                          "typeString": "literal_string \"user 1 token balance is \""
                        },
                        "value": "user 1 token balance is "
                      },
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 10950,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10429,
                              "src": "3834:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 10952,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 10951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3840:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3834:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 10948,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10415,
                            "src": "3817:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$10329",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10166,
                          "src": "3817:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3817:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_846145ee7cbb3bc7a5df55b95dc9a31b92b5d3ff867197a81d3228d619aea5a8",
                          "typeString": "literal_string \"user 1 token balance is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10944,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "3776:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 10946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "3776:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3776:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10955,
                  "nodeType": "ExpressionStatement",
                  "src": "3776:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10959,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10429,
                                "src": "3879:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                  "typeString": "address payable[] storage ref"
                                }
                              },
                              "id": 10961,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 10960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3885:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3879:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 10957,
                              "name": "_erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10415,
                              "src": "3862:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$10329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 10958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10166,
                            "src": "3862:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 10962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3862:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3892:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3862:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10956,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3854:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3854:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10966,
                  "nodeType": "ExpressionStatement",
                  "src": "3854:40:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10970,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10429,
                                "src": "3929:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                  "typeString": "address payable[] storage ref"
                                }
                              },
                              "id": 10972,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 10971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3935:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3929:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 10968,
                              "name": "_erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10415,
                              "src": "3912:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$10329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 10969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10166,
                            "src": "3912:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 10973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3912:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 10974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3942:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "3912:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3904:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3904:43:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10977,
                  "nodeType": "ExpressionStatement",
                  "src": "3904:43:5"
                }
              ]
            },
            "functionSelector": "1aeb10a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testApprove",
            "nameLocation": "3473:11:5",
            "parameters": {
              "id": 10884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3484:2:5"
            },
            "returnParameters": {
              "id": 10885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3494:0:5"
            },
            "scope": 11012,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 11011,
            "nodeType": "FunctionDefinition",
            "src": "3960:186:5",
            "body": {
              "id": 11010,
              "nodeType": "Block",
              "src": "3989:157:5",
              "statements": [
                {
                  "assignments": [
                    10983
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10983,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "4007:1:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 11010,
                      "src": "3999:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10982,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3999:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10985,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 10984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4011:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3999:13:5"
                },
                {
                  "assignments": [
                    10987
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10987,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "4030:1:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 11010,
                      "src": "4022:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10986,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4022:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10989,
                  "initialValue": {
                    "hexValue": "32",
                    "id": 10988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4034:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4022:13:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6a616720",
                        "id": 10993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4058:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e85c55213bd659c9207c419d7dc54b701dfa025fe31b72f3f633f5e02dec18f3",
                          "typeString": "literal_string \"jag \""
                        },
                        "value": "jag "
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 10994,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10983,
                                "src": "4067:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31303030",
                                "id": 10995,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4071:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "src": "4067:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 10997,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4066:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 10998,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10987,
                          "src": "4079:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4066:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e85c55213bd659c9207c419d7dc54b701dfa025fe31b72f3f633f5e02dec18f3",
                          "typeString": "literal_string \"jag \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10990,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "4045:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 10992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "4045:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 11000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4045:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11001,
                  "nodeType": "ExpressionStatement",
                  "src": "4045:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "63757272656e7420636861696e20697320",
                        "id": 11005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4104:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9dcaf8570c49048607bde132e02a369a7814302ea6f627409b00c404fe14e1e",
                          "typeString": "literal_string \"current chain is \""
                        },
                        "value": "current chain is "
                      },
                      {
                        "expression": {
                          "id": 11006,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4125:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 11007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainid",
                        "nodeType": "MemberAccess",
                        "src": "4125:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c9dcaf8570c49048607bde132e02a369a7814302ea6f627409b00c404fe14e1e",
                          "typeString": "literal_string \"current chain is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11002,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10064,
                        "src": "4091:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$10064_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 11004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "4091:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 11008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4091:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11009,
                  "nodeType": "ExpressionStatement",
                  "src": "4091:48:5"
                }
              ]
            },
            "functionSelector": "da75220a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testz",
            "nameLocation": "3969:5:5",
            "parameters": {
              "id": 10980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3974:2:5"
            },
            "returnParameters": {
              "id": 10981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3989:0:5"
            },
            "scope": 11012,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10411,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1786,
              "src": "199:6:5"
            },
            "id": 10412,
            "nodeType": "InheritanceSpecifier",
            "src": "199:6:5"
          }
        ],
        "canonicalName": "Erc20Test",
        "contractDependencies": [
          10329
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          11012,
          1786
        ],
        "name": "Erc20Test",
        "nameLocation": "186:9:5",
        "scope": 11013,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  }
}